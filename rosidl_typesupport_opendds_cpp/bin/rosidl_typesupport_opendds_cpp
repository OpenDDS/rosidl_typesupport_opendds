#!/usr/bin/env python3

import argparse
import sys

from rosidl_cmake import read_generator_arguments
from rosidl_typesupport_opendds_cpp import generate_cpp
from rosidl_typesupport_opendds_cpp import generate_idl
from rosidl_typesupport_opendds_cpp import generate_dds_opendds_cpp

import glob, os, shutil

def copy_idls(source_rel_path, dest_rel_path, cwd=os.getcwd()):
    updated_idls_path=os.path.abspath(os.path.join(cwd, source_rel_path))
    original_idls_path=os.path.abspath(os.path.join(cwd,dest_rel_path))
    if os.path.isdir(updated_idls_path) and os.path.isdir(original_idls_path):
        files = glob.iglob(os.path.join(updated_idls_path, "*_.idl"))
        print('copying from ', updated_idls_path, ' to ', original_idls_path)
        for file in files:
            if os.path.isfile(file):
                print('coping file ', file)
                shutil.copy2(file, original_idls_path)

def main(argv=sys.argv[1:]):
    parser = argparse.ArgumentParser(
        description='Generate the C++ interfaces for OpenDDS.',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument(
        '--generator-arguments-file',
        required=True,
        help='The location of the file containing the generator arguments')
    parser.add_argument(
        '--dds-interface-base-path',
        required=True,
        help='The base location of the DDS interface files')
    parser.add_argument(
        '--idl-pp',
        required=True,
        help='The location of the IDL preprocessor')
    args = parser.parse_args(argv)

    generator_args = read_generator_arguments(args.generator_arguments_file)

    rc = generate_cpp(args.generator_arguments_file)
    if rc:
        return rc

    rc = generate_idl(args.generator_arguments_file)
    if rc:
        return rc

    copy_idls('../../rmw_build/no_anon_type_idls/action_msgs/msg','rosidl_generator_dds_idl/action_msgs/msg/dds_opendds/')
    copy_idls('../../rmw_build/no_anon_type_idls/action_msgs/srv','rosidl_generator_dds_idl/action_msgs/srv/dds_opendds/')
    copy_idls('../../rmw_build/no_anon_type_idls/example_interfaces/action','rosidl_generator_dds_idl/example_interfaces/action/dds_opendds/')
    copy_idls('../../rmw_build/no_anon_type_idls/rcl_interfaces/msg','rosidl_generator_dds_idl/rcl_interfaces/msg/dds_opendds')
    copy_idls('../../rmw_build/no_anon_type_idls/rcl_interfaces/srv','rosidl_generator_dds_idl/rcl_interfaces/srv/dds_opendds/')
    copy_idls('../../rmw_build/no_anon_type_idls/std_msgs','rosidl_generator_dds_idl/std_msgs/msg/dds_opendds/')
    copy_idls('../../rmw_build/no_anon_type_idls/test_msgs/action','rosidl_generator_dds_idl/test_msgs/action/dds_opendds/')
    copy_idls('../../rmw_build/no_anon_type_idls/test_msgs/msg','rosidl_generator_dds_idl/test_msgs/msg/dds_opendds/')
    copy_idls('../../rmw_build/no_anon_type_idls/test_msgs/srv','rosidl_generator_dds_idl/test_msgs/srv/dds_opendds/')
    copy_idls('../../rmw_build/no_anon_type_idls/unique_identifier_msgs','rosidl_generator_dds_idl/unique_identifier_msgs/msg/dds_opendds/')

    return generate_dds_opendds_cpp(
        generator_args['package_name'],
        generator_args.get('additional_files', []),
        args.dds_interface_base_path,
        generator_args.get('ros_interface_dependencies', []),
        generator_args['output_dir'],
        args.idl_pp
    )


if __name__ == '__main__':
    sys.exit(main())
